<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\soc.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\soc.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Mon Nov 15 17:13:20 2021
<BR><P>
<H3>Maximum Stack Usage =        156 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; LCD_Draw_FaceBox &rArr; LCD_Thick_Window &rArr; LCD_Draw_Window &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; Delay
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">ACCConvDone_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[13]">ACCNoFace_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[14]">ACCReadResults_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[11]">DMAWakeup_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[a]">KEY0_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[b]">KEY1_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[c]">KEY2_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[d]">KEY3_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[15]">RESIZERDone_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[17]">SystemInit</a> from system_init.o(i.SystemInit) referenced from startup_cm3ds.o(.text)
 <LI><a href="#[10]">UARTOVR_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[e]">UARTRX_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[f]">UARTTX_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[18]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_cm3ds.o(.text)
 <LI><a href="#[16]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[18]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(.text)
</UL>
<P><STRONG><a name="[6f]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[19]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[70]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[71]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[72]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[73]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[74]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMIHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManageHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVCHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMonHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSVHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SysTick_Handler &rArr; SysTickHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>UARTRX_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRXHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>UARTTX_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTTXHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>UARTOVR_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTOVRHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>ACCConvDone_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ACCConvDone_Handler &rArr; ACCConvDoneHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACCConvDoneHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>ACCNoFace_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACCNoFaceHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>ACCReadResults_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACCReadResultsHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMAWakeup_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>KEY0_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key0Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>KEY1_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key1Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>KEY2_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key2Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>KEY3_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key3Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>RESIZERDone_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RESIZERDone_Handler &rArr; ResizerDoneHandler &rArr; ACC_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResizerDoneHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Draw_FaceBox
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_ReadResults
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[1a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[77]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>ACCConvDoneHandler</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, acc.o(i.ACCConvDoneHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ACCConvDoneHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_RegConfig
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_NmsEnable
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_ConvEnable
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_ClrCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACCConvDone_Handler
</UL>

<P><STRONG><a name="[28]"></a>ACCNoFaceHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, acc.o(i.ACCNoFaceHandler))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACCNoFace_Handler
</UL>

<P><STRONG><a name="[29]"></a>ACCReadResultsHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, acc.o(i.ACCReadResultsHandler))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACCReadResults_Handler
</UL>

<P><STRONG><a name="[30]"></a>ACC_ClrCtrl</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, acc.o(i.ACC_ClrCtrl))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_RegInit
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACCConvDoneHandler
</UL>

<P><STRONG><a name="[32]"></a>ACC_ConvEnable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, acc.o(i.ACC_ConvEnable))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_Start
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACCConvDoneHandler
</UL>

<P><STRONG><a name="[35]"></a>ACC_GetIsvalid</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, acc.o(i.ACC_GetIsvalid))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Draw_FaceBox
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_ReadResults
</UL>

<P><STRONG><a name="[33]"></a>ACC_NmsEnable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, acc.o(i.ACC_NmsEnable))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACCConvDoneHandler
</UL>

<P><STRONG><a name="[34]"></a>ACC_ReadResults</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, acc.o(i.ACC_ReadResults))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ACC_ReadResults
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_GetIsvalid
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Draw_FaceBox
</UL>

<P><STRONG><a name="[31]"></a>ACC_RegConfig</STRONG> (Thumb, 1410 bytes, Stack size 0 bytes, acc.o(i.ACC_RegConfig))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_RegInit
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACCConvDoneHandler
</UL>

<P><STRONG><a name="[37]"></a>ACC_RegInit</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, acc.o(i.ACC_RegInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ACC_RegInit
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_RegConfig
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_ClrCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[38]"></a>ACC_Start</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, acc.o(i.ACC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ACC_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_ConvEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResizerDoneHandler
</UL>

<P><STRONG><a name="[1e]"></a>BusFaultHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.BusFaultHandler))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>

<P><STRONG><a name="[39]"></a>CAMERA_Command</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, camera.o(i.CAMERA_Command))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = CAMERA_Command &rArr; CAMERA_Write_Byte &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Write_Byte
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Stop
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Init
</UL>

<P><STRONG><a name="[3d]"></a>CAMERA_ImageCap</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, camera.o(i.CAMERA_ImageCap))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CAMERA_ImageCap &rArr; LED_ShutDown
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CAMERA_DATA_STATE
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_CAMERA_DATA_STATE
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_ShutDown
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_LightUp
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>CAMERA_Init</STRONG> (Thumb, 764 bytes, Stack size 40 bytes, camera.o(i.CAMERA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = CAMERA_Init &rArr; CAMERA_Read_Reg &rArr; CAMERA_Write_Byte &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CAMERA_SDA_W
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CAMERA_RST
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_CAMERA_PWDN
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Read_Reg
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[48]"></a>CAMERA_NA</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, camera.o(i.CAMERA_NA))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CAMERA_NA &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CAMERA_SDA
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CAMERA_SCL
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_CAMERA_SDA
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_CAMERA_SCL
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Read_Reg
</UL>

<P><STRONG><a name="[4d]"></a>CAMERA_Read_Byte</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, camera.o(i.CAMERA_Read_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CAMERA_Read_Byte &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CAMERA_SDA_W
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CAMERA_SDA_R
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CAMERA_SCL
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_CAMERA_SDA
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_CAMERA_SCL
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Read_Reg
</UL>

<P><STRONG><a name="[47]"></a>CAMERA_Read_Reg</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, camera.o(i.CAMERA_Read_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = CAMERA_Read_Reg &rArr; CAMERA_Write_Byte &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Write_Byte
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Stop
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Start
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Read_Byte
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_NA
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Init
</UL>

<P><STRONG><a name="[3a]"></a>CAMERA_Start</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, camera.o(i.CAMERA_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CAMERA_Start &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CAMERA_SDA
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CAMERA_SCL
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_CAMERA_SDA
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_CAMERA_SCL
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Read_Reg
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Command
</UL>

<P><STRONG><a name="[3c]"></a>CAMERA_Stop</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, camera.o(i.CAMERA_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CAMERA_Stop &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CAMERA_SDA
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CAMERA_SCL
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_CAMERA_SDA
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Read_Reg
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Command
</UL>

<P><STRONG><a name="[3b]"></a>CAMERA_Write_Byte</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, camera.o(i.CAMERA_Write_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CAMERA_Write_Byte &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CAMERA_SDA_W
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CAMERA_SDA_R
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CAMERA_SDA
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CAMERA_SCL
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_CAMERA_SDA
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_CAMERA_SCL
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Read_Reg
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Command
</UL>

<P><STRONG><a name="[44]"></a>Clr_CAMERA_PWDN</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, camera.o(i.Clr_CAMERA_PWDN))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Init
</UL>

<P><STRONG><a name="[4b]"></a>Clr_CAMERA_SCL</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, camera.o(i.Clr_CAMERA_SCL))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Write_Byte
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Start
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Read_Byte
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_NA
</UL>

<P><STRONG><a name="[4c]"></a>Clr_CAMERA_SDA</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, camera.o(i.Clr_CAMERA_SDA))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Write_Byte
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Stop
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Start
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_NA
</UL>

<P><STRONG><a name="[55]"></a>DMA</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, dma.o(i.DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DMA
</UL>

<P><STRONG><a name="[21]"></a>DebugMonHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.DebugMonHandler))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>

<P><STRONG><a name="[45]"></a>Delay</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, systick.o(i.Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysTick_VALUE
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysTick_LOAD
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysTick_CTRL
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Start
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadReg
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_RD_DATA
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Write_Byte
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Stop
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Start
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Read_Reg
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Read_Byte
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_NA
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Init
</UL>

<P><STRONG><a name="[1c]"></a>HardFaultHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.HardFaultHandler))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[2a]"></a>Key0Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, keyboard.o(i.Key0Handler))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY0_Handler
</UL>

<P><STRONG><a name="[2b]"></a>Key1Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, keyboard.o(i.Key1Handler))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY1_Handler
</UL>

<P><STRONG><a name="[2c]"></a>Key2Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, keyboard.o(i.Key2Handler))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY2_Handler
</UL>

<P><STRONG><a name="[2d]"></a>Key3Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, keyboard.o(i.Key3Handler))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY3_Handler
</UL>

<P><STRONG><a name="[68]"></a>Key_Init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, keyboard.o(i.Key_Init))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[53]"></a>LCD_DMA</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lcd.o(i.LCD_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_DMA &rArr; LCD_PrepareDMA &rArr; LCD_WR_REG &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_QuitDMA
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PrepareDMA
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Display
</UL>

<P><STRONG><a name="[57]"></a>LCD_Display</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd.o(i.LCD_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCD_Display &rArr; LCD_DMA &rArr; LCD_PrepareDMA &rArr; LCD_WR_REG &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>LCD_Draw_FaceBox</STRONG> (Thumb, 144 bytes, Stack size 64 bytes, lcd.o(i.LCD_Draw_FaceBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = LCD_Draw_FaceBox &rArr; LCD_Thick_Window &rArr; LCD_Draw_Window &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Thick_Window
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_ReadResults
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_GetIsvalid
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>LCD_Draw_Window</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, lcd.o(i.LCD_Draw_Window))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LCD_Draw_Window &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fast_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Thick_Window
</UL>

<P><STRONG><a name="[5b]"></a>LCD_Fast_DrawPoint</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lcd.o(i.LCD_Fast_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeData
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Draw_Window
</UL>

<P><STRONG><a name="[5f]"></a>LCD_Init</STRONG> (Thumb, 618 bytes, Stack size 16 bytes, lcd.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCD_Init &rArr; LCD_Scan_Dir &rArr; LCD_WR_REG &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Scan_Dir
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadReg
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[54]"></a>LCD_PrepareDMA</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, lcd.o(i.LCD_PrepareDMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LCD_PrepareDMA &rArr; LCD_WR_REG &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DMA
</UL>

<P><STRONG><a name="[56]"></a>LCD_QuitDMA</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd.o(i.LCD_QuitDMA))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DMA
</UL>

<P><STRONG><a name="[62]"></a>LCD_RD_DATA</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lcd.o(i.LCD_RD_DATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCD_RD_DATA &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadReg
</UL>

<P><STRONG><a name="[60]"></a>LCD_ReadReg</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcd.o(i.LCD_ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LCD_ReadReg &rArr; LCD_WR_REG &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_RD_DATA
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[61]"></a>LCD_Scan_Dir</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, lcd.o(i.LCD_Scan_Dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LCD_Scan_Dir &rArr; LCD_WR_REG &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[59]"></a>LCD_Thick_Window</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, lcd.o(i.LCD_Thick_Window))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = LCD_Thick_Window &rArr; LCD_Draw_Window &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Draw_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Draw_FaceBox
</UL>

<P><STRONG><a name="[5d]"></a>LCD_WR_DATA</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lcd.o(i.LCD_WR_DATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCD_WR_DATA &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeData
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Scan_Dir
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PrepareDMA
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fast_DrawPoint
</UL>

<P><STRONG><a name="[5c]"></a>LCD_WR_REG</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lcd.o(i.LCD_WR_REG))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCD_WR_REG &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeData
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Scan_Dir
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadReg
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PrepareDMA
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fast_DrawPoint
</UL>

<P><STRONG><a name="[3f]"></a>LED_LightUp</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, gpio.o(i.LED_LightUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LED_LightUp
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_GPIO_Value
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_GPIO_Output
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_ImageCap
</UL>

<P><STRONG><a name="[41]"></a>LED_ShutDown</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gpio.o(i.LED_ShutDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LED_ShutDown
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_GPIO_Value
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_GPIO_Output
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_ImageCap
</UL>

<P><STRONG><a name="[5e]"></a>MakeData</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, lcd.o(i.MakeData))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fast_DrawPoint
</UL>

<P><STRONG><a name="[1d]"></a>MemManageHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.MemManageHandler))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>

<P><STRONG><a name="[1b]"></a>NMIHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.NMIHandler))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[22]"></a>PendSVHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.PendSVHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[63]"></a>ReadData</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lcd.o(i.ReadData))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_RD_DATA
</UL>

<P><STRONG><a name="[40]"></a>Read_CAMERA_DATA_STATE</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, camera.o(i.Read_CAMERA_DATA_STATE))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_ImageCap
</UL>

<P><STRONG><a name="[4f]"></a>Read_CAMERA_SDA</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, camera.o(i.Read_CAMERA_SDA))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Read_Byte
</UL>

<P><STRONG><a name="[64]"></a>Read_GPIO_Output</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gpio.o(i.Read_GPIO_Output))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_ShutDown
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_LightUp
</UL>

<P><STRONG><a name="[2e]"></a>ResizerDoneHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, resizer.o(i.ResizerDoneHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ResizerDoneHandler &rArr; ACC_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESIZERDone_Handler
</UL>

<P><STRONG><a name="[6c]"></a>Resizer_Start</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, resizer.o(i.Resizer_Start))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20]"></a>SVCHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.SVCHandler))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>

<P><STRONG><a name="[3e]"></a>Set_CAMERA_DATA_STATE</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, camera.o(i.Set_CAMERA_DATA_STATE))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_ImageCap
</UL>

<P><STRONG><a name="[46]"></a>Set_CAMERA_RST</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, camera.o(i.Set_CAMERA_RST))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Init
</UL>

<P><STRONG><a name="[4a]"></a>Set_CAMERA_SCL</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, camera.o(i.Set_CAMERA_SCL))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Write_Byte
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Stop
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Start
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Read_Byte
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_NA
</UL>

<P><STRONG><a name="[49]"></a>Set_CAMERA_SDA</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, camera.o(i.Set_CAMERA_SDA))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Write_Byte
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Stop
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Start
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_NA
</UL>

<P><STRONG><a name="[4e]"></a>Set_CAMERA_SDA_R</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, camera.o(i.Set_CAMERA_SDA_R))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Write_Byte
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Read_Byte
</UL>

<P><STRONG><a name="[43]"></a>Set_CAMERA_SDA_W</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, camera.o(i.Set_CAMERA_SDA_W))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Write_Byte
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Read_Byte
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Init
</UL>

<P><STRONG><a name="[69]"></a>Set_GPIO_Dir</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.Set_GPIO_Dir))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[65]"></a>Set_GPIO_Value</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.Set_GPIO_Value))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_ShutDown
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_LightUp
</UL>

<P><STRONG><a name="[50]"></a>Set_SysTick_CTRL</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, systick.o(i.Set_SysTick_CTRL))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>

<P><STRONG><a name="[51]"></a>Set_SysTick_LOAD</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, systick.o(i.Set_SysTick_LOAD))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>

<P><STRONG><a name="[52]"></a>Set_SysTick_VALUE</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, systick.o(i.Set_SysTick_VALUE))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>

<P><STRONG><a name="[23]"></a>SysTickHandler</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, systick.o(i.SysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SysTickHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysTick_CTRL
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[66]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_init.o(i.SystemCoreClockUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[17]"></a>SystemInit</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, system_init.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SystemInit &rArr; CAMERA_Init &rArr; CAMERA_Read_Reg &rArr; CAMERA_Write_Byte &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_GPIO_Dir
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_RegInit
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(.text)
</UL>
<P><STRONG><a name="[6d]"></a>Timer_Reset</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, timer.o(i.Timer_Reset))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>Timer_Show_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, timer.o(i.Timer_Show_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>Timer_Start</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, timer.o(i.Timer_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Timer_Start &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>UARTOVRHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(i.UARTOVRHandler))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTOVR_Handler
</UL>

<P><STRONG><a name="[24]"></a>UARTRXHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(i.UARTRXHandler))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRX_Handler
</UL>

<P><STRONG><a name="[25]"></a>UARTTXHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(i.UARTTXHandler))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTTX_Handler
</UL>

<P><STRONG><a name="[1f]"></a>UsageFaultHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.UsageFaultHandler))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>

<P><STRONG><a name="[78]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[79]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[7a]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[16]"></a>main</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = main &rArr; LCD_Draw_FaceBox &rArr; LCD_Thick_Window &rArr; LCD_Draw_Window &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Start
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Show_Enable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Reset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resizer_Start
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Draw_FaceBox
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Display
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAMERA_ImageCap
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_ShutDown
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_LightUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[6a]"></a>uart_Init</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, uart.o(i.uart_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[67]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, system_init.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
